/*  ‚ñ∏‚ñ∏‚ñ∏  –ø–µ—Ä–≤—ã–µ —Å—Ç—Ä–æ–∫–∏ script.js  ‚ñ∏‚ñ∏‚ñ∏  */
import * as THREE from 'https://unpkg.com/three@0.165.0/build/three.module.js';
import { OrbitControls }      from 'https://unpkg.com/three@0.165.0/examples/jsm/controls/OrbitControls.js';

// –∏–º–ø–æ—Ä—Ç (—Å—Ç–∞–≤–∏–º —Ä—è–¥–æ–º —Å three-–∏–º–ø–æ—Ä—Ç–∞–º–∏)
import SimplexNoise from
  'https://cdn.jsdelivr.net/npm/simplex-noise@3.0.1/+esm';   //  ‚Üê v3!





/* ---------- EMOJI FALL & SPIN ---------- */
const cvs  = document.getElementById('matrix'),
      ctx  = cvs.getContext('2d');

const size        = 48;                       // —Ä–∞–∑–º–µ—Ä —ç–º–æ–¥–∑–∏
const speed       = 1.2;                      // px/–∫–∞–¥—Ä
const chars       = [...'üòçü§™ü•¥ü§†üòéü§ìüò≤ü•∫üòàüí©üëΩüëæ'];
let W, H, drops = [];

function resize(){
  W = innerWidth;
  H = innerHeight;
  cvs.width  = W;
  cvs.height = H;

  // –æ–¥–Ω–∞ ¬´–∫–∞–ø–ª—è¬ª –Ω–∞ –∫–∞–∂–¥—ã–π —Å—Ç–æ–ª–±–µ—Ü
  const cols = Math.ceil(W / size);
  drops = Array.from({length: cols}, (_, i) => ({
    x: i * size + size / 2,   // —Ü–µ–Ω—Ç—Ä —Å—Ç–æ–ª–±—Ü–∞
    y: Math.random() * H,     // —Å–ª—É—á–∞–π–Ω–æ–µ —Å—Ç–∞—Ä—Ç-Y
    char: chars[i % chars.length],
    angle: Math.random() * Math.PI * 2        // —Å—Ç–∞—Ä—Ç–æ–≤—ã–π —É–≥–æ–ª
  }));
}
addEventListener('resize', resize);
resize();

function rain(){
  ctx.clearRect(0, 0, W, H);                  // ‚ë† –Ω–µ—Ç —à–ª–µ–π—Ñ–∞

  ctx.font         = `${size}px "Apple Color Emoji","Segoe UI Emoji","Noto Color Emoji",system-ui,sans-serif`;
  ctx.textAlign    = 'center';
  ctx.textBaseline = 'middle';

  drops.forEach(d => {
    // ‚ë° —Ä–∏—Å—É–µ–º —Å –ø–æ–≤–æ—Ä–æ—Ç–æ–º
    ctx.save();
    ctx.translate(d.x, d.y);
    ctx.rotate(d.angle);
    ctx.fillText(d.char, 0, 0);
    ctx.restore();

    // –æ–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
    d.y     += speed;
    d.angle += 0.05;          // —Å–∫–æ—Ä–æ—Å—Ç—å –≤—Ä–∞—â–µ–Ω–∏—è (—Ä–∞–¥/–∫–∞–¥—Ä)

    // –µ—Å–ª–∏ –≤—ã—à–ª–∏ –∑–∞ –Ω–∏–∑ ‚Äï –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –Ω–∞–≤–µ—Ä—Ö —Å –Ω–æ–≤—ã–º —Å–º–∞–π–ª–æ–º
    if (d.y > H + size){
      d.y    = -size;
      d.char = chars[Math.random() * chars.length | 0];
    }
  });

  requestAnimationFrame(rain);
}
rain();
/* ---------- /EMOJI FALL & SPIN ---------- */



/* ============================================================= *
 *  SKILL-PIANO ‚Äî –∑–∞–ª–∏–≤–∫–∞ 0‚Üílvl –∏ –æ–¥–∏–Ω —Å–µ–º–ø–ª —Å –∏–∑–º–µ–Ω–µ–Ω–∏–µ–º –≤—ã—Å–æ—Ç—ã  *
 * ============================================================= */

/* 1. –¥–∞–Ω–Ω—ã–µ (lvl = % —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç–∏, note = –∂–µ–ª–∞–µ–º–∞—è –Ω–æ—Ç–∞) */
const skills = [
  { txt:'HTML / CSS', clr:'#00ff88', note:'C4', lvl:90 },
  { txt:'JavaScript', clr:'#00ff66', note:'D4', lvl:85 },
  { txt:'TypeScript', clr:'#00ffcc', note:'E4', lvl:70 },
  { txt:'React',      clr:'#00ffaa', note:'F4', lvl:80 },
  { txt:'Node.js',    clr:'#00ff44', note:'G4', lvl:75 },
  { txt:'C# / SQL',   clr:'#00ffbb', note:'A4', lvl:60 }
];

/* –æ–¥–∏–Ω –∏ —Ç–æ—Ç –∂–µ –∑–≤—É–∫ –¥–ª—è –≤—Å–µ—Ö –∫–ª–∞–≤–∏—à */
const SAMPLE_URL = 'ekh.mp3';          // –ø–æ–ª–æ–∂–∏ —Ñ–∞–π–ª —Ä—è–¥–æ–º —Å index.html
const HOT_KEYS   = ['a','s','d','f','g','h'];   // –±—ã—Å—Ç—Ä—ã–µ –∫–ª–∞–≤–∏—à–∏

/* 2. —Ä–∏—Å—É–µ–º –∫–ª–∞–≤–∏—à–∏ */
const piano = document.getElementById('pianoWrap');
piano.innerHTML = skills.map((s,i)=>`
  <div class="skill-key flex-shrink-0"
       data-idx="${i}"
       style="--clr:${s.clr}; --lvl:${s.lvl/100}; --prog:0">
    <span>${s.txt}</span>
    <div class="lvl-tip">${s.lvl}%</div>
  </div>`).join('');



/* ---------- Web-Audio ------------------------------------ */
const AudioCtx = window.AudioContext || window.webkitAudioContext;
let audioCtx;
try {
  audioCtx = new AudioCtx({ latencyHint: 'interactive' });
} catch {
  audioCtx = new AudioCtx();
}

let unlocked = false;
addEventListener('pointerdown', () => {
  if (!unlocked) { audioCtx.resume(); unlocked = true; }
}, { once: true });

/* –∑–∞–≥—Ä—É–∂–∞–µ–º —Å–µ–º–ø–ª –æ–¥–∏–Ω —Ä–∞–∑ */
let sampleBuf = null;
fetch('ekh.mp3')
  .then(r => r.arrayBuffer())
  .then(b => audioCtx.decodeAudioData(b))
  .then(buf => sampleBuf = buf)
  .catch(e => console.error('sample load', e));

/* note -> playbackRate –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ C4 */
function rateFromNote(note) {
  const map = { C:0,'C#':1,D:2,'D#':3,E:4,F:5,'F#':6,G:7,'G#':8,A:9,'A#':10,B:11 };
  const [, letter, oct] = note.match(/^([A-G]#?)(\d)$/);
  const semis = map[letter] + 12 * (oct - 4);
  return Math.pow(2, semis / 12);
}

/* –ø—Ä–æ–∏–≥—Ä—ã–≤–∞–µ–º —Å–µ–º–ø–ª —Å –Ω—É–∂–Ω—ã–º —Ç–æ–Ω–æ–º */
function play(idx) {
  if (!sampleBuf) return;                 // –µ—â—ë –Ω–µ –∑–∞–≥—Ä—É–∑–∏–ª—Å—è
  const src = audioCtx.createBufferSource();   // ‚Üê audioCtx!
  src.buffer = sampleBuf;
  src.playbackRate.value = rateFromNote(skills[idx].note);
  src.connect(audioCtx.destination);           // ‚Üê audioCtx!
  src.start();
}
function flash(el){
  /* 1. —Å–±—Ä–æ—Å ‚Üí –º–≥–Ω–æ–≤–µ–Ω–Ω—ã–π –ø–æ–¥—ä—ë–º –¥–æ lvl */
  el.style.setProperty('--prog', 0);
  void el.offsetHeight;                             // –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫ transition
  el.style.setProperty('--prog', el.style.getPropertyValue('--lvl'));

  /* 2. –ø—Ä–æ—Ü–µ–Ω—Ç—ã */
  const tip = el.querySelector('.lvl-tip');
  tip.classList.add('show');
  clearTimeout(tip.hideT);
  tip.hideT = setTimeout(()=>tip.classList.remove('show'), 900);

  /* 3. –≤–æ–ª–Ω–∞ (–µ—Å–ª–∏ –±—ã–ª–∞) */
  el.classList.add('playing');
  clearTimeout(el.waveT);
  el.waveT = setTimeout(()=>el.classList.remove('playing'), 500);

  /* 4. –ß–ï–†–ï–ó –°–ï–ö–£–ù–î–£ –æ–ø—É—Å–∫–∞–µ–º –ø—Ä–æ–≥—Ä–µ—Å—Å –æ–±—Ä–∞—Ç–Ω–æ –¥–æ 0  */
  clearTimeout(el.dropT);               // c–±–∏–≤–∞–µ–º —Å—Ç–∞—Ä—ã–π —Ç–∞–π–º–µ—Ä, –µ—Å–ª–∏ –±—ã–ª
  el.dropT = setTimeout(()=>{
    el.style.setProperty('--prog', 0);  // –ø–ª–∞–≤–Ω–æ —Å–ø—É—Å—Ç–∏—Ç—Å—è —Ç–µ–º –∂–µ transition
  }, 1000);                             // ‚Üê 1 000 –º—Å
}


/* 5. –Ω–∞–∂–∞–ª–∏ –∫–ª–∞–≤–∏—à—É */
function press(idx){
  const el = piano.children[idx];
  play(idx); flash(el);
}

/* 6. —Å–æ–±—ã—Ç–∏—è –º—ã—à—å + –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ */
piano.addEventListener('pointerdown',e=>{
  const key=e.target.closest('.skill-key');
  if(key) press(+key.dataset.idx);
});
addEventListener('keydown',e=>{
  const i = HOT_KEYS.indexOf(e.key.toLowerCase());
  if(i>-1) press(i);
});

/* ----------------------------------------------------------------------- */
/* 3.  GitHub —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏ + VanillaTilt                                    */
/* ----------------------------------------------------------------------- */
const username = 'darkkaktus',
      maxRepos = 6,
      list     = document.getElementById('repoList');

async function fetchRepos() {
  try {
    const res = await fetch(`https://api.github.com/users/${username}/repos?per_page=${maxRepos}&sort=pushed`,
      { headers: { Accept: 'application/vnd.github+json' } });
    if (!res.ok) throw new Error(res.status);
    return await res.json();
  } catch {
    const res = await fetch(`https://gh-pinned-repos.egoist.dev/?username=${username}`);
    if (!res.ok) throw new Error('fallback-fail');
    const data = await res.json();
    return data.slice(0, maxRepos).map(r => ({
      name: r.repo,
      html_url: `https://github.com/${username}/${r.repo}`,
      description: r.description,
      language: r.language,
      stargazers_count: r.stars
    }));
  }
}

async function loadRepos() {
  try {
    const repos = await fetchRepos();
    if (!repos.length) throw new Error('empty');

    repos.forEach(r => {
      list.insertAdjacentHTML('beforeend', `
        <div class="col-md-6 col-lg-4">
          <div class="glass p-3 h-100 repo-card" data-tilt data-tilt-max="5">
            <h3 class="h6 fw-bold mb-1">
              <a href="${r.html_url}" target="_blank" class="link-light text-decoration-none">
                <i class="bi-github"></i> ${r.name}
              </a>
            </h3>
            <p class="small text-secondary flex-grow-1">${r.description ?? '‚Äî no description ‚Äî'}</p>
            <div class="d-flex justify-content-between small">
              <span><i class="bi-circle-fill text-neo me-1"></i>${r.language ?? '‚Äì'}</span>
              <span><i class="bi-star me-1"></i>${r.stargazers_count ?? 0}</span>
            </div>
          </div>
        </div>`);
    });

    if (window.VanillaTilt) {
      VanillaTilt.init(document.querySelectorAll('[data-tilt]'), {
        max: 5, speed: 400, glare: true, 'max-glare': .15
      });
    }

  } catch (err) {
    list.innerHTML = `<p class="small text-danger">
      –Ω–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–∏ (${err.message}).</p>`;
  }
}
loadRepos();

/* ----------------------------------------------------------------------- */
/* 4.  IntersectionObserver ‚Äì –ø–ª–∞–≤–Ω–æ–µ –ø–æ—è–≤–ª–µ–Ω–∏–µ —Å–µ–∫—Ü–∏–π                     */
/* ----------------------------------------------------------------------- */
const io = new IntersectionObserver(
  entries => entries.forEach(e => { if (e.isIntersecting) e.target.classList.add('show'); }),
  { threshold: 0.25 }
);
document.querySelectorAll('.fade-in').forEach(s => io.observe(s));

const keySeq = [];
addEventListener('keydown', e=>{
  keySeq.push(e.key.toLowerCase());
  keySeq.splice(0, keySeq.length - 10);    // —Ö—Ä–∞–Ω–∏–º 10 –ø–æ—Å–ª–µ–¥–Ω–∏—Ö

  const str = keySeq.join('');

  if(str.endsWith('matrix')){
    const m = document.getElementById('matrix');
    m.style.opacity = m.style.opacity === '0' ? '.14' : '0';
  }

  if(str.endsWith('tilt')){
    document.querySelectorAll('.repo-card').forEach(card=>{
      card.dataset.tilt ? card.removeAttribute('data-tilt')
                        : card.setAttribute('data-tilt','');
    });
    if(window.VanillaTilt) VanillaTilt.init('[data-tilt]');
  }
});

(function(){
  const cvs = document.getElementById('stars');
  const ctx = cvs.getContext('2d');
  const stars=[], links=[];                  // —Ç–æ—á–∫–∏ –∏ —Ä—ë–±—Ä–∞
  const N = 45;                              // –∑–≤—ë–∑–¥
  let w,h, mouse={x:0,y:0};

  function resize(){
    w = cvs.width  = innerWidth;
    h = cvs.height = innerHeight;
  }
  resize(); addEventListener('resize',resize);

  // –≥–µ–Ω–µ—Ä–∏–º –∑–≤—ë–∑–¥—ã: –∫–∞–∂–¥–∞—è —Å –ø—Ä–∏–≤—è–∑–∞–Ω–Ω—ã–º ¬´—Å–∫–∏–ª–ª–æ–º¬ª (—Ä–∞–Ω–¥–æ–º —Å–µ–π—á–∞—Å)
  const skillNames = ['HTML','CSS','JS','React','Three','Node','SQL','Docker','AWS'];
  for(let i=0;i<N;i++){
    stars.push({
      x:Math.random()*w,
      y:Math.random()*h,
      vx:(Math.random()-.5)*.3,
      vy:(Math.random()-.5)*.3,
      txt: skillNames[i%skillNames.length]
    });
  }
  // –ø—Ä–µ–¥-—Å–≤—è–∑—ã–≤–∞–µ–º –±–ª–∏–∂–∞–π—à–∏—Ö —Å–æ—Å–µ–¥–µ–π (3 —Ä–µ–±—Ä–∞ –Ω–∞ –∑–≤–µ–∑–¥—É)
  stars.forEach(s=>{
    links.push(...stars
      .filter(o=>o!==s)
      .sort((a,b)=>dist2(s,a)-dist2(s,b))
      .slice(0,3)
      .map(o=>[s,o]));
  });

  addEventListener('pointermove',e=> mouse={x:e.clientX,y:e.clientY});

  requestAnimationFrame(loop);
  function loop(){
    requestAnimationFrame(loop);
    ctx.clearRect(0,0,w,h);

    // –¥–≤–∏–∂–µ–Ω–∏–µ
    for(const s of stars){
      s.x += s.vx; s.y += s.vy;
      if(s.x<0||s.x>w) s.vx*=-1;
      if(s.y<0||s.y>h) s.vy*=-1;
    }

    // –ª–∏–Ω–∏–∏
    ctx.strokeStyle='rgba(0,255,180,.25)'; ctx.lineWidth=1;
    ctx.beginPath();
    for(const [a,b] of links){
      if(dist2(a,b)<6000) { ctx.moveTo(a.x,a.y); ctx.lineTo(b.x,b.y); }
    }
    ctx.stroke();

    // –∑–≤—ë–∑–¥—ã + —Ç–µ–∫—Å—Ç
    ctx.font='12px Share Tech Mono'; ctx.textAlign='center';
    for(const s of stars){
      const d = Math.hypot(s.x-mouse.x,s.y-mouse.y);
      const r = d<120 ? 4 : 2;                     // –±–ª–∏–∂–µ –∫ –∫—É—Ä—Å–æ—Ä—É ‚Äî —è—Ä—á–µ
      ctx.fillStyle=`rgba(0,255,140,${d<120?.9:.4})`;
      ctx.beginPath(); ctx.arc(s.x,s.y,r,0,6.28); ctx.fill();
      if(d<100){ ctx.fillText(s.txt,s.x,s.y-8); }
    }
  }

  function dist2(a,b){ const dx=a.x-b.x, dy=a.y-b.y; return dx*dx+dy*dy; }
})();
